/*
 * es310_configs.h  --  ES310 ALSA Soc Audio driver
 *
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * The download image for the ES310 will be requested as
 * 'es310_anc.bin' by default (overridable via platform data) at
 * runtime and is expected to be in flat binary format.  This is
 * generated by Wolfson configuration tools and includes
 * system-specific callibration information.  If supplied as a
 * sequence of ASCII-encoded hexidecimal bytes this can be converted
 * into a flat binary with a command such as this on the command line:
 *
 * perl -e 'while (<>) { s/[\r\n]+// ; printf("%c", hex($_)); }'
 *                 < file  > es310_anc.bin
 */
/***********************************************************************/
/* Modified by                                                         */
/* (C) NEC CASIO Mobile Communications, Ltd. 2013                      */
/***********************************************************************/
#ifndef __LINUX_SND_ES310_CONFIG_H
#define __LINUX_SND_ES310_CONFIG_H

#define ES310_REQUEST_FIRMWARE

#define VER(MAJ,MIN)    ((MAJ<0xF)|(MIN))
static unsigned short ES310_MODE_CT[]={
0x8031, 0x0000 // 0x8031:SetPriset ,0x0000:CTmode
};

static unsigned short ES310_MODE_ENABLE_MIC_BIAS[]={
0x800C, 0x1002, 0x800D, 0x0001, // 0x800C:SetDeviceParmID, 0x10:ADC0, 0x02:Mic Bias Enable, 0x800D:SetDeviceParm, 0x0001:Enable
0x800C, 0x1102, 0x800D, 0x0001, // 0x800C:SetDeviceParmID, 0x11:ADC1, 0x02:Mic Bias Enable, 0x800D:SetDeviceParm, 0x0001:Enable
};

static unsigned short ES310_MODE_HANDSET_REC[]={
0x800C, 0x1000, 0x800D, 0x000C, // 0x800C:SetDeviceParmId, 0x1000:ADC0 Rate, 0x800D:SetDeviceParm, 0x000C: 8 kHz
0x800C, 0x1100, 0x800D, 0x000C, // 0x800C:SetDeviceParmId, 0x1100:ADC1 Rate, 0x800D:SetDeviceParm, 0x000C: 8 kHz
0x800C, 0x1002, 0x800D, 0x0001, // 0x800C:SetDeviceParmID, 0x10:ADC0, 0x02:Mic Bias Enable, 0x800D:SetDeviceParm, 0x0001:Enable
0x800C, 0x1102, 0x800D, 0x0001, // 0x800C:SetDeviceParmID, 0x11:ADC1, 0x02:Mic Bias Enable, 0x800D:SetDeviceParm, 0x0001:Enable
0x8026, 0x0047, // 0x8026:SetSelectRouting, 0x0043:0x0043
0x801C, 0x0000, // 0x801C:VoiceProcessing, 0x0000:NO
};

static unsigned short ES310_MODE_LINE_REC[]={
0x8026, 0x0043, // 0x8026:SetSelectRouting, 0x0043:0x0043
0x800C, 0x1101,
0x800D, 0x0004,
0x800C, 0x1000, 0x800D, 0x000C, // 0x800C:SetDeviceParmId, 0x1000:ADC0 Rate, 0x800D:SetDeviceParm, 0x000C: 8 kHz
0x800C, 0x1100, 0x800D, 0x000C, // 0x800C:SetDeviceParmId, 0x1100:ADC1 Rate, 0x800D:SetDeviceParm, 0x000C: 8 kHz
0x800C, 0x1002, 0x800D, 0x0001, // 0x800C:SetDeviceParmID, 0x10:ADC0, 0x02:Mic Bias Enable, 0x800D:SetDeviceParm, 0x0001:Enable
0x800C, 0x1102, 0x800D, 0x0001, // 0x800C:SetDeviceParmID, 0x11:ADC1, 0x02:Mic Bias Enable, 0x800D:SetDeviceParm, 0x0001:Enable
0x8026, 0x0049, // 0x8026:SetSelectRouting, 0x0043:0x0043
0x801C, 0x0000, // 0x801C:VoiceProcessing, 0x0000:NO
};

static unsigned short ES310_MODE_FT[]={
0x8031, 0x0001, //0x8031:SetPriset ,0x0001:FTmode(DV)
0x8015, 0x0106 // 0x8015:SetDigitalOutputGain, 0x01:DAC1, 0x06:6 dB
};

static unsigned short ES310_MODE_OFF[]={
0x801C,0x0000,//0x801C:VoiceProcessingOn,,0x0001:On
0x800C,0x1002,0x800D,0x0000,//0x800C:SetDeviceParmID,,0x10:ADC0,,0x02:ADC,Mic,Bias,Enable,,0x800D:SetDeviceParm,,0x0001:Enable
0x800C,0x1102,0x800D,0x0000,//0x800C:SetDeviceParmID,,0x11:ADC1,,0x02:ADC,Mic,Bias,Enable,,0x800D:SetDeviceParm,,0x0001:Enable
};
#endif
